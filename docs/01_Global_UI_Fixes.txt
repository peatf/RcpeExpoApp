# Prompt: Resolve Global UI and Theming Inconsistencies

As an AI developer, your task is to perform a global refactor of the application's UI to fix widespread styling and theming issues. Address the following issues to ensure a consistent and polished user experience.

---

### **Issue 1: Button Glyphs Look "Pasted On"**
- **Description:** The icon and text on every `StackedButton` appear too sharp against the button layers, lacking visual depth.
- **File / Location:** `src/components/StackedButton.tsx` (specifically `styles.contentContainer` & `styles.glowContainer`)
- **Suggestion:** Add a mild blur, drop-shadow, or feather the edges using the `textShadow` style property in the `contentContainer` to visually blend the glyph and button.

---

### **Issue 2: Hamburger Icon Has Wrong Color When Closed**
- **Description:** In the main header, the menu glyph is pure black, which is inconsistent with other glyphs in the app.
- **File / Location:** `src/navigation/AppNavigator.tsx` (in the header options) or any custom `Header` component.
- **Suggestion:** Replace the hard-coded `#000` color with the appropriate theme variable, such as `theme.colors.iconDefault`.

---

### **Issue 3: Beige Screen Backgrounds That Should Be Transparent**
- **Description:** Several screens use `theme.colors.base1` for top-level `View` backgrounds, creating an unwanted beige color instead of being transparent.
- **File / Location:** Affects multiple files, including `src/components/StepTracker.tsx` (line 51) and many screen-specific style sheets.
- **Suggestion:** Globally search for this implementation and remove the `backgroundColor` property or set it to `transparent`.

---

### **Issue 38: Theme Inconsistencies**
- **Description:** Several components use inline, hard-coded color values (e.g., `#FFF`, `#000000`) instead of referencing the central theme file.
- **File / Location:** Project-wide.
- **Suggestion:** Perform a global search for hard-coded colors (`"#"`) in all `.tsx` files and replace these literal values with tokens from `src/constants/theme.ts` to improve maintainability.

### Issue 17: Oracle step-bar background is beige
- **Description:** The progress bar on the Oracle screen renders with a beige background instead of transparent, breaking visual consistency.
- **File:** `src/components/StepTracker.tsx` (as rendered in OracleScreen)
- **Suggestion:** Set `backgroundColor: "transparent"` on the container styles so the step-bar matches the global transparent style used elsewhere (e.g. Frequency Mapper).